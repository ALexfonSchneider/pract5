DONE 1) POST /courier Регистрация курьера в системе. Поля: name: str - имя курьера districts: list[str] - массив районов. Заказ и курьер должны иметь общий район.

DONE 2) GET /courier получение информации о всех курьеров системе. Ожидаемые поля: id: UUID или int - уникальный идентификатор. Можно использовать uuid или обычный автоинкремент name: str - имя курьера.

DONE 3) GET /courier/{id} Получение подробной информации о курьере id: UUID | int - уникальный идентификатор. 
Можно использовать uuid или обычный автоинкремент name: str - имя курьера active_order: dict - информация об активном заказе. 
Если такого нет, возвращать None {"order_id": ид заказа, "order_name": имя заказа } avg_order_complete_time: datetime - среднее время отработки заказа avg_day_orders: int - среднее кол-во завершенных заказов в день.

DONE 4) POST /order Публикация заказа в системе с полями: name: str - имя заказа district: str - район заказа. В случае, если удалось найти подходящего курьера, запрос должен вернуть order_id (ид заказа) и courier_id( ид курьера). Если подходящего курьера нет, то запрос должен вернуть ошибку.

DONE 5) GET /order/{id} Получение информации о заказе courier_id: UUID | int status: int - статус заказа. 1 - в работе, 2 - завершен.

DONE 6) POST /order/{id} Завершить заказ. Должен вернуть ошибку если заказ уже завершен или такого заказа нет.